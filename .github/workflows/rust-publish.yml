name: Publish

on:
  push:
    tags:
      - v*

jobs:
  build-release:
    name: Build Release Artifact for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: target/release/architect
            asset_name: linux
          - os: windows-latest
            artifact_name: target/release/architect.exe
            asset_name: windows
          - os: macos-latest
            artifact_name: target/release/architect
            asset_name: macos

    steps:
      - uses: actions/checkout@v1

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Build
        run: cargo build --release --bin architect --locked

      - name: Upload binaries to release
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - build-release

    steps:
      - run: echo "VERSION=${GITHUB_REF}/refs\/tags\//}" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.VERSION }}
          draft: true
          prerelease: false

      - uses: actions/download-artifact@v2
        id: download
        with:
          path: artifacts

      - name: Prepare Release Assets
        working-directory: ${{ steps.download.outputs.download-path }}
        run: |
          VERSION=$(echo $VERSION | sed 's/^v//')
          mv linux/architect       linux/architect-$VERSION-linux-x86_64
          mv macos/architect       macos/architect-$VERSION-darwin
          mv windows/architect.exe windows/architect-$VERSION-win-x86_64.exe 

      - name: Uploading Release Assets
        uses: dwenegar/upload-release-assets@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          assets_path: ${{ steps.download.outputs.download-path }}
