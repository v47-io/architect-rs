name: Quality Control

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        rust: [ stable, beta ]
        exclude:
          - os: macos-latest
            rust: beta
          - os: windows-latest
            rust: beta

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package architect-rs --bin architect --all-targets
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --package architect-rs --bin architect

  test-binary:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          sudo apt update
          sudo apt install -y expect
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package architect-rs --bin architect --all-targets
      - run: |
          chmod +x target/debug/architect
          chmod +x .github/scripts/test-architect.sh
          .github/scripts/test-architect.sh

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/cargo@v1
        if: always()
        with:
          command: clippy
          args: --workspace --all-targets -- -D warnings

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: llvm-tools-preview
      - run: |
          chmod +x .github/scripts/coverage.sh
          .github/scripts/coverage.sh
      - uses: codecov/codecov-action@v1
        with:
          directory: coverage
